# Generated by roxygen2: do not edit by hand

S3method(print,revenue_foregone)
export(IncomeTax)
export(MedicareLevy)
export(Offset)
export(age_grouper)
export(age_pension)
export(age_pension_age)
export(apply_super_caps_and_div293)
export(aus_pop_qtr)
export(aus_pop_qtr_age)
export(awote)
export(bto)
export(carer_payment)
export(carers_allowance)
export(child_care_subsidy)
export(compare_avg_tax_rates)
export(cpi_inflator)
export(cpi_inflator_general_date)
export(cpi_inflator_quarters)
export(date2fy)
export(differentially_uprate_wage)
export(energy_supplement)
export(family_tax_benefit)
export(fv)
export(fy.year)
export(fy2date)
export(fy2yr)
export(gdp_fy)
export(gdp_qtr)
export(gni_fy)
export(gni_qtr)
export(income_tax)
export(income_tax_sapto)
export(inflator)
export(install_taxstats)
export(inverse_average_rate)
export(inverse_income)
export(irr)
export(is.fy)
export(lf_inflator)
export(lf_inflator_fy)
export(lito)
export(medicare_levy)
export(model_child_care_subsidy)
export(model_income_tax)
export(model_new_caps_and_div293)
export(model_rent_assistance)
export(mutate_ntile)
export(n_affected_from_new_cap_and_div293)
export(new_income_tax)
export(new_medicare_levy)
export(new_sapto)
export(newstart_allowance)
export(npv)
export(pension_supplement)
export(pmax3)
export(pmaxC)
export(pmaxV)
export(pminC)
export(pminV)
export(pmt)
export(progressivity)
export(project)
export(project_to)
export(pv)
export(rent_assistance)
export(require_taxstats)
export(require_taxstats1516)
export(revenue_foregone)
export(revenue_from_new_cap_and_div293)
export(sapto)
export(sapto_rcpp)
export(sapto_rcpp_singleton)
export(sapto_rcpp_yr)
export(small_business_tax_offset)
export(student_repayment)
export(unemployment_benefit)
export(wage_inflator)
export(weighted_ntile)
export(youth_allowance)
export(youth_unemployment)
export(yr2fy)
import(data.table)
importFrom(Rcpp,sourceCpp)
importFrom(fastmatch,"%fin%")
importFrom(fastmatch,fmatch)
importFrom(hutils,"%ein%")
importFrom(hutils,"%notchin%")
importFrom(hutils,AND)
importFrom(hutils,NEITHER)
importFrom(hutils,NOR)
importFrom(hutils,OR)
importFrom(hutils,XOR)
importFrom(hutils,coalesce)
importFrom(hutils,if_else)
importFrom(hutils,mutate_ntile)
importFrom(hutils,weighted_ntile)
importFrom(magrittr,"%$%")
importFrom(magrittr,"%<>%")
importFrom(magrittr,"%>%")
importFrom(magrittr,"%T>%")
importFrom(magrittr,and)
importFrom(magrittr,or)
importFrom(stats,complete.cases)
importFrom(stats,setNames)
useDynLib(grattan, .registration = TRUE)
