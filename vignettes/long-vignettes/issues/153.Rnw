\documentclass[submission]{grattan}
\usepackage{pdflscape}
\usepackage{longtable}

\title{Negative gearing by occupation}
\author{Hugh Parsonage}

\GrattanReportNumber{0}

\begin{document}
<<knitrOpts, include=FALSE>>=
library(knitr)
@

<<grattanCharts-setup, include=FALSE>>=
library(grattanCharts)
library(xtable)
setup_knitr_for_grattex(chunktimings.txt = "153-CHUNKTIMINGS.txt")
@

<<loadPackages>>=
library(grid)
library(gridExtra)
library(taxstats)
library(data.table)
library(magrittr)
library(grattan)
library(hutils)
library(readxl)
library(grattanCharts)
library(ggplot2)
library(scales)
percent <- function(x) scales::percent(x, accuracy = 1)
library(ggrepel)
@

<<GetTaxstats1516>>=
TaxstatsTable14 <- 
  if (file.exists("153-cache/TaxstatsTable14.csv") &&
      file.exists("153-cache/nPersons_by_Occupation.csv")) {
    nPersons_by_Occupation <-
      fread("153-cache/nPersons_by_Occupation.csv",
            key = "Occupation")
    
    fread("153-cache/TaxstatsTable14.csv")
  } else {
    tempf.xlsx <- tempfile(fileext = ".xlsx")
    
    download.file(url = "https://data.gov.au/dataset/d170213c-4391-4d10-ac24-b0c11768da3f/resource/ba2db090-de79-44d8-ba8a-4bfec1c72893/download/taxstats2016individual14occupationgendertaxableincomerange.xlsx",
                  destfile = tempf.xlsx,
                  mode = "wb")
    
    provide.dir("153-cache")
    
    read_excel(tempf.xlsx, 
               sheet = "Individual Table 14A",
               skip = 2, 
               na = c("* Blank")) %>%
      as.data.table %>%
      setnames(names(.), 
               sub("\r\n", "", names(.), fixed = TRUE)) %>%
      setnames(1L, "Occupation") %>%
      setnames("Taxable income range - tax brackets", "TaxBracket") %>%
      setnames("Number of individuals", "nIndividuals") %>%
      melt.data.table(id.vars = c("Occupation",
                                  "Gender",
                                  "TaxBracket",
                                  "nIndividuals"),
                      variable.factor = FALSE) %>%
      .[, c("variable", "unit") := tstrsplit(variable, split = " (?=(no\\.|[$]))", perl = TRUE)] %>%
      .[, unit := if_else(unit == "$", "dollar", "number")] %>%
      .[, nIndividuals := NULL] %>%  # misleading here
      .[] %T>%
      fwrite("153-cache/TaxstatsTable14.csv") %>%
      .[]
    
    
    nPersons_by_Occupation <-
      read_excel(tempf.xlsx, 
                 sheet = "Individual Table 14A",
                 skip = 2, 
                 na = c("* Blank")) %>%
      as.data.table %>%
      setnames(names(.), 
               sub("\r\n", "", names(.), fixed = TRUE)) %>%
      setnames(1L, "Occupation") %>%
      setnames("Taxable income range - tax brackets", "TaxBracket") %>%
      setnames("Number of individuals", "nIndividuals") %>%
      .[, .(nIndividuals = sum(nIndividuals)), keyby = "Occupation"] %T>%
      fwrite("153-cache/nPersons_by_Occupation.csv") %>%
      .[]
  }
@

<<TaxstatsTable14-incl-CEOs>>=
CEO_occupations <- 
  c(#"1100 Chief Executives, General Managers and Legislators - type not specified", 
    "1111 Chief Executives and Managing Directors")
TaxstatsTable14[Occupation %ein% c(CEO_occupations), Occupation := "CEOs"]
nPersons_by_Occupation[Occupation %ein% c(CEO_occupations), Occupation := "CEOs"]
nPersons_by_Occupation[, .(nIndividuals = sum(nIndividuals)), keyby = "Occupation"]
@

<<>>=
avgTaxableIncome_by_Occupation <-
  TaxstatsTable14 %>%
  .[complete.cases(.)] %>%
  .[variable %ein% "Taxable income or loss3"] %>%
  .[, .(total = sum(value)), keyby = c("Occupation", "unit")] %>%
  dcast.data.table(Occupation ~ unit, value.var = "total") %>%
  .[number > 0] %>%
  .[, .(avgTaxableIncome = dollar / number), keyby = "Occupation"] %>%
  .[]

avgRentLosses_by_Occupation <- 
  TaxstatsTable14 %>%
  .[complete.cases(.)] %>%
  .[variable %ein% "Net rent - loss"] %>%
  .[, .(total = sum(value)), keyby = c("Occupation", "unit")] %>%
  dcast.data.table(Occupation ~ unit, value.var = "total") %>% 
  .[number > 0] %>%
  .[, .(avgRentLosses = dollar / number), keyby = "Occupation"] %>%
  .[]

avgBenefit_by_Occupation <-
  avgTaxableIncome_by_Occupation[avgRentLosses_by_Occupation, on = "Occupation"] %>%
  .[, avgTax := income_tax(avgTaxableIncome, "2015-16")] %>%
  # Recall losses are negative
  .[, avgTaxNoNG := income_tax(avgTaxableIncome - avgRentLosses, "2015-16")] %>%
  .[, avgBenefit := avgTaxNoNG - avgTax] %>%
  .[]

nNG_by_Occupation <-
  TaxstatsTable14 %>%
  .[complete.cases(.)] %>%
  .[variable %ein% "Net rent - loss"] %>%
  .[unit %ein% "number"] %>%
  .[, .(nNG = sum(value)), keyby = c("Occupation")]
@
\null

\begin{figure*}
\caption{Average negative gearing benefit vs taxable income, 2015-16}
<<avgBenefit-vs-avgTaxableIncome, fig.height=1.9*fig_height, out.height=paste0(1.9*out_height, "in"), fig.width=2*fig_width, out.width=paste0(2*out_width, "in")>>=
avgBenefit_by_Occupation[nPersons_by_Occupation, on = "Occupation", nomatch=0L] %>%
  .[nzchar(Occupation)] %>%
  .[, label := sub(" - type not specified", "", Occupation, fixed = TRUE)] %>%
  .[, label := sub("^[0-9]+\\s*", "", label)] %>%
  .[, label := sub(" and (?!Emergency).*$", "", label, perl = TRUE)] %>%
  .[, keep_label := or(avgTaxableIncome > 150e3 | avgBenefit > 5000 | grepl("Emerge", Occupation),
                       dplyr::ntile(nIndividuals, 100) >= 98)] %>%
  .[, label := if_else(keep_label, label, NA_character_)] %>%
  .[, color := if_else(grepl("Emerge", Occupation), gpal(2)[1], "black")] %>%
  .[, fontface := if_else(grepl("Emerge", Occupation), "bold", "plain")] %>%
  .[label %enotin% c("Occupation not matched")] %>%
  .[avgBenefit > 0] %T>%
  chart_data %>%
  
  grplot(aes(x = avgTaxableIncome, y = avgBenefit)) + 
  geom_point(aes(size = nIndividuals)) + 
  scale_x_continuous("Taxable Income", labels = dollar) + 
  scale_y_continuous(labels = grattan_dollar, expand = c(0, 0)) +
  geom_text_repel(aes(label = label,
                      color = color,
                      fontface = fontface),
                  force = 1.3,
                  min.segment.length = 0,
                  size = 14/(14/5),
                  family = if (is_knitting()) "helvet" else "",
                  point.padding = 0.25,
                  box.padding = 1,
                  na.rm = TRUE) + 
  scale_color_identity()
if (is_knitting()) {
  stopifnot(endsWith(dirname(normalizePath(dir(".")[1], winslash = "/")),
                     "grattan/vignettes/long-vignettes/issues"))
  chart_data_url.csv <- 
    gsub("(?<!(https:))//*", "/", perl = TRUE,
         paste0("https://github.com/grattan/",
                "vignettes/long-vignettes/issues/",
                knitr::opts_chunk$get(name = "fig.path"),
                knitr::opts_current$get(name = "label"), 
                ".csv"))
}
@
\mbox{\null\hspace{\textwidth}{\small\href{\Sexpr{chart_data_url.csv}}{\textcolor{blue}{\emph{Chart data}}}}}
\end{figure*}

\begin{figure}
\caption{Average negative gearing benefit vs taxable income, 2015-16}
<<avgBenefits-vs-TaxableIncome-twitter, fig.height=0.8*fig_width, out.height=paste0(0.8*out_width, "in"), dev='png', fig.ext="png">>=
gc(full = TRUE)  # ggrepel buffer overflow?
avgBenefit_by_Occupation[nPersons_by_Occupation, on = "Occupation", nomatch=0L] %>%
  .[nzchar(Occupation)] %>%
  .[, label := as.character(Occupation)] %>%
  .[label %ein% "2220 Financial Brokers, Dealers, Investment Advisers and Managers - type not specified",
    label := "Investment Advisers"] %>%
  .[, label := sub(" - type not specified", "", label, fixed = TRUE)] %>%
  .[, label := sub("^[0-9]+\\s*", "", label)] %>%
  .[label %ein% "Judicial and Other Legal Professionals", label := "Lawyers"] %>%
  .[, label := sub(" and (?!Emergency).*$", "", label, perl = TRUE)] %>%
  .[, label := sub(" (General)", "", label, fixed = TRUE)] %>%
  .[, label := sub(", Dealers, Investment Advisers", "", label, fixed = TRUE)] %>%
  .[, label := sub("^Fire and ", "", label)] %>%
  .[, label := sub("Emergency Workers", "Emergency\nWorkers", label)] %>%
  .[, label := sub("Registered Nurses", "Nurses", label)] %>%
  .[, label := sub("Other Medical Practitioners", "Other Doctors", label)] %>%
  .[, label := sub("Primary School Teachers", "Primary School\nTeachers", label)] %>%
  .[] %>%
  .[, keep_label := label %ein% c("Emergency\nWorkers",
                                  "Primary School\nTeachers",
                                  "Sales Assistants",
                                  "Farmers",
                                  "Investment Advisers",
                                  "CEOs",
                                  "Lawyers",
                                  "Financial Dealers",
                                  "Other Doctors",
                                  "Nurses",
                                  "Anaesthetists",
                                  "Surgeons")] %>%
  .[, label := if_else(keep_label, label, "")] %>%
  .[, color := if_else(grepl("Emerge", Occupation), gpal(2)[1], "black")] %>%
  .[, fontface := if_else(grepl("Emerge", Occupation), "bold", "plain")] %>%
  .[avgBenefit > 0] %T>%
  chart_data %>%
  
  grplot(aes(x = avgTaxableIncome, y = avgBenefit)) + 
  ggtitle("Average tax benefit due to negative gearing") + 
  theme(#title = element_text(face = "bold", hjust = -0.4, vjust = 0, size = 18),
        plot.margin = margin(t = 5),
        plot.title = element_text(face = "plain", hjust = -0.75, vjust = 0, size = 16,
                                  color = theGrey)) +
  geom_point(aes(size = nIndividuals)) +
  scale_x_continuous("Taxable Income",
                     expand = c(0, 0),
                     labels = function(x) paste0(dollar(x / 1000), "k")) + 
  geom_label_repel(aes(label = label),
                   fill = "white",
                   label.size = NA,
                   min.segment.length = 0,
                   force = 1.5,
                   max.iter = 3000,
                   lineheight = 1,
                   size = 16/(14/5),
                   family = if (is_knitting()) "helvet" else "",
                   point.padding = 0.5,
                   box.padding = 1.5,
                   na.rm = TRUE) + 
  geom_blank(aes(x = 0, y = 16e3)) +
  geom_blank(aes(x = 0, y = 0)) +
  geom_blank(aes(x = 430e3, y = 0)) +
  geom_blank(aes(x = -10e3, y = 0)) +
  scale_y_continuous(labels = grattan_dollar, 
                     breaks = c(0, 5e3, 10e3, 15e3),
                     expand = c(0, 0))
@
\end{figure}

\begin{figure}
\caption{Proportion negative gearing benefit vs taxable income, 2015-16}
<<propBenefits-vs-TaxableIncome-twitter, fig.height=0.8*fig_width, out.height=paste0(0.8*out_width, "in"), dev='png', fig.ext="png">>=
gc(full = TRUE)  # ggrepel buffer overflow?
p_propoBenefits_vs_avgTaxableIncome <- 
  nNG_by_Occupation[nPersons_by_Occupation, on = "Occupation", nomatch=0L] %>%
  .[avgTaxableIncome_by_Occupation, on = "Occupation", nomatch=0L] %>%
  .[nzchar(Occupation)] %>%
  .[, label := as.character(Occupation)] %>%
  .[label %ein% "2220 Financial Brokers, Dealers, Investment Advisers and Managers - type not specified",
    label := "Investment Advisers"] %>%
  .[, label := sub(" - type not specified", "", label, fixed = TRUE)] %>%
  .[, label := sub("^[0-9]+\\s*", "", label)] %>%
  .[label %ein% "Judicial and Other Legal Professionals", label := "Lawyers"] %>%
  .[, label := sub(" and (?!Emergency).*$", "", label, perl = TRUE)] %>%
  .[, label := sub(" (General)", "", label, fixed = TRUE)] %>%
  .[, label := sub(", Dealers, Investment Advisers", "", label, fixed = TRUE)] %>%
  .[, label := sub("^Fire and ", "", label)] %>%
  .[, label := sub("Emergency Workers", "Emergency\nWorkers", label)] %>%
  .[, label := sub("Registered Nurses", "Nurses", label)] %>%
  .[, label := sub("Other Medical Practitioners", "Other Doctors", label)] %>%
  .[, label := sub("Primary School Teachers", "Primary School\nTeachers", label)] %>%
  
  .[, keep_label := label %ein% c("Emergency\nWorkers",
                                  "Primary School\nTeachers",
                                  "Sales Assistants",
                                  "Farmers",
                                  "Investment Advisers",
                                  "CEOs",
                                  "Lawyers",
                                  "Financial Dealers",
                                  "Other Doctors",
                                  "Nurses",
                                  "Anaesthetists",
                                  "Surgeons")] %>%
  .[, label := if_else(keep_label, label, "")] %>%
  .[, label := if_else((.I %% 3) > 0 & !nzchar(label), NA_character_, label)] %>%
  .[, color := if_else(grepl("Emerge", Occupation), gpal(2)[1], "black")] %>%
  .[, fontface := if_else(grepl("Emerge", Occupation), "bold", "plain")] %>%
  .[, propNG := nNG / nIndividuals] %>%
  .[nIndividuals > 0] %T>%
  chart_data %>%
  
  grplot(aes(x = avgTaxableIncome, y = propNG)) +
  ggtitle("Percentage of occupation negatively gearing property, 2015-16") +
  theme(plot.title = element_text(size = 16, color = theGrey)) +
  geom_point(aes(size = nIndividuals)) +
  scale_x_continuous("Taxable Income",
                     expand = c(0, 0),
                     limits = c(0, 430e3),
                     labels = function(x) paste0(dollar(x / 1000), "k")) + 
  scale_y_continuous(expand = c(0, 0),
                     limits = c(-0.005, 0.32),
                     labels = function(x) paste0(round(x * 100), "%")) +
  geom_label_repel(aes(label = label),
                   fill = "white",
                   label.size = NA,
                   force = 1.5,
                   max.iter = 3000,
                   lineheight = 1,
                   size = 16/(14/5),
                   family = if (is_knitting()) "helvet" else "",
                   point.padding = 0.5,
                   box.padding = 1.5,
                   na.rm = TRUE)
library(gridExtra)
grid.newpage()
g <- ggplotGrob(p_propoBenefits_vs_avgTaxableIncome)
g$layout$l[g$layout$name == "title"] <- 1
grid::grid.draw(g)
@
\end{figure}



\begin{figure*}
<<propNG_by_Occupation, fig.width=2.2*fig_width, out.width=paste0(2.2*out_width, "in"), fig.height=2*fig_height, out.height=paste0(2*out_height, "in")>>=
nNG_by_Occupation[nPersons_by_Occupation, on = "Occupation"] %>%
  .[nzchar(Occupation)] %>%
  .[, label := sub(" - type not specified", "", Occupation, fixed = TRUE)] %>%
  .[, label := sub("^[0-9]+\\s*", "", label)] %>%
  .[, label := sub(" and (?!Emergency).*$", "", label, perl = TRUE)] %>%
  .[label %enotin% c("Occupation not matched")] %>%
  .[nIndividuals > 500] %>%
  .[, .(propNG = weighted.mean(nNG / nIndividuals, nIndividuals),
        nIndividuals = sum(nIndividuals)),
    keyby = "label"] %>%
  mutate_ntile("nIndividuals", n = 100) %>%
  setorder(propNG) %>%
  .[, label := factor(label, levels = unique(label), ordered = TRUE)] %>%
  .[nIndividuals / sum(nIndividuals) > 0.01,
    # add trailing space for cosmetics
    text := paste0(as.character(label), " ")] %>%
  .[propNG == max(propNG), text := as.character(label)] %T>%
  chart_data %>%
  .[, ymin := 0] %>%
  .[, ymax := propNG] %>%
  .[, xmin := shift(cumsum(nIndividuals), fill = 0)] %>%
  .[, xmax := cumsum(nIndividuals)] %>%
  .[] %>%
  grplot(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
  geom_rect(aes(xmin = xmin, 
                xmax = xmax,
                ymin = ymin,
                ymax = ymax),
            fill = DarkOrange) +
  scale_y_continuous(expand = c(0, 0),
                     label = percent) +
  # geom_col(color = DarkOrange,
  #          width = 1,
  #          fill = DarkOrange) +
  geom_hline(yintercept = c(0.1, 0.2), 
             color = "white") +
  geom_text(aes(x = (xmin + xmax) /2,
                y = ymax,
                label = text),
            na.rm = TRUE,
            family = if (is_knitting()) "helvet" else "",
            # direction = "y",
            vjust = 0.5,
            hjust = 1,
            angle = 90,
            size = 10/(14/5)) + 
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.title.x = element_blank())
if (is_knitting()) {
  stopifnot(endsWith(dirname(normalizePath(dir(".")[1], winslash = "/")),
                     "grattan/vignettes/long-vignettes/issues"))
  chart_data_url.csv <- 
    gsub("(?<!(https:))//*", "/", perl = TRUE,
         paste0("https://github.com/grattan/",
                "vignettes/long-vignettes/issues/",
                knitr::opts_chunk$get(name = "fig.path"),
                knitr::opts_current$get(name = "label"), 
                ".csv"))
}
@
\source{\null\hfill{\footnotesize\href{\Sexpr{chart_data_url.csv}}{\textcolor{blue}{\emph{Chart data}}}}}
\end{figure*}

\begin{figure}
<<propNG_by_Occupation--png, dev=c("png", "pdf"), fig.ext=c("png", "pdf"), fig.height=2*fig_height, out.height=paste0(2*out_height, "in")>>=
nNG_by_Occupation[nPersons_by_Occupation, on = "Occupation"] %>%
  .[nzchar(Occupation)] %>%
  .[, label := sub(" - type not specified", "", Occupation, fixed = TRUE)] %>%
  .[, label := sub("^[0-9]+\\s*", "", label)] %>%
  .[, label := sub(" and (?!Emergency).*$", "", label, perl = TRUE)] %>%
  .[, label := if_else(label %ein% "Senior Non-commissioned Defence Force Members",
                       "Senior NCOs",
                       label)] %>%
  .[label %enotin% c("Occupation not matched")] %>%
  .[nIndividuals > 500] %>%
  .[, .(propNG = weighted.mean(nNG / nIndividuals, nIndividuals),
        nIndividuals = sum(nIndividuals)),
    keyby = "label"] %>%
  mutate_ntile("nIndividuals", n = 100) %>%
  setorder(propNG) %>%
  .[, label := factor(label, levels = unique(label), ordered = TRUE)] %>%
  .[nIndividuals / sum(nIndividuals) > 0.02,
    # add trailing space for cosmetics
    text := paste0(as.character(label), " ")] %T>%
   chart_data %>%
  .[, hjust := if_else(propNG < 0.1, 0, 1)] %>%
  .[, label.x := if_else(propNG > 0.1, 0.975 * propNG, 1.025 * propNG)] %>%
  .[, II := nrow(.):1] %>%
  .[II < 5, text2 := paste0(" ", as.character(label))] %>%
 
  .[, ymin := 0] %>%
  .[, ymax := propNG] %>%
  .[, xmin := shift(cumsum(nIndividuals), fill = 0)] %>%
  .[, xmax := cumsum(nIndividuals)] %>%
  .[II < 5, y.text := max(xmax) * seq(0.7, 0.95, length.out = 4)] %>%
  .[, x := xmin/2 + xmax/2] %>%
  .[] %>%
  grplot(aes(xmin = ymin, 
             xmax = ymax,
             ymin = xmin,
             ymax = xmax)) + 
  geom_rect(fill = DarkOrange) + 
  geom_text(aes(y = x,
                x = label.x,
                hjust = hjust,
                label = text),
            size = 14/(14/5),
            na.rm = TRUE) +
  scale_x_continuous("% negative gearing",
                     limits = c(0, 0.375),
                     labels = percent) +
  geom_text(aes(y = y.text,
                x = propNG,
                label = text2),
            size = 14/(14/5),
            family = if (is_knitting()) "helvet" else "",
            hjust = 0,
            vjust = 0,
            na.rm = TRUE) +
  geom_segment(aes(y = x,
                   x = propNG,
                   yend = y.text,
                   xend = propNG),
               na.rm = TRUE) +
  # geom_label_repel(aes(y = x,
  #                      x = propNG,
  #                      label = text2),
  #                  na.rm = TRUE,
  #                  hjust = 0,
  #                  max.iter = 500,
  #                  force = 0.5,
  #                  size = 14/(14/5),
  #                  fill = "white",
  #                  label.size = NA,
  #                  family = if (is_knitting()) "helvet" else "",
  #                  direction = "y") +
  scale_y_continuous(expand = c(0, 0.1),
                     labels = function(x) paste0(x / 1e6, "M"))
@
\end{figure}

\onecolumn
\AtBeginEnvironment{longtable}{\small}
\appendix
\chapter{Colophon}
<<sessionInfo, results='asis'>>=
sessioninfo::package_info() %>%
  as.data.table %>%
  drop_constant_cols %>%
  drop_cols(c("ondiskversion", "path", "loadedpath")) %>%
  .[, lapply(.SD, function(x) if (is.logical(x)) {
    if_else(x, "\\(\\blacksquare\\)", "")
  } else x)] %>%
  
  setnames(names(.), gsub("_", " ", names(.))) %>%
  xtable %>%
  print.xtable(floating = FALSE,
               sanitize.text.function = identity,
               sanitize.colnames.function = function(x) paste0("\\textbf{", x, "}"),
               include.rownames = FALSE,
               booktabs = TRUE,
               tabular.environment = "longtable")
@

\end{document}

